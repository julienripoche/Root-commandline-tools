#!/usr/bin/python

"""Commandline to copy objects
from ROOT files into an other"""

from cmdLineUtils import *

##### Beginning of the main code #####

# Collect arguments with the module argparse
parser = argparse.ArgumentParser(description="Copy objects from ROOT files into an other")
parser.add_argument("source_pattern_list", \
                    help="file path and object path in the file : [file_path/]file[.root]:[object_path/]object", \
                    nargs='+')
parser.add_argument("dest_pattern", \
                    help="file path and object path in the file : [file_path/]file[.root]:[object_path/]object")
parser.add_argument("-c","--compress", type=int, help="change the compression settings of the destination file")
parser.add_argument("-r","--recreate", help="recreate the destination file", action="store_true")
args = parser.parse_args()

# Create a list of tuples that contain a source ROOT file name and a list of path in this file
source_list = [tup for pattern in args.source_pattern_list for tup in pattern_to_tuple(pattern)]

# Create a destination ROOT file name and a path in this file
dest_list = pattern_to_tuple(args.dest_pattern,regexp=False)
dest_name,dest_path_list = dest_list[0]
dest_path = dest_path_list[0]

# Create a dictionnary with options
opt_dict = vars(args)
del opt_dict["source_pattern_list"]
del opt_dict["dest_pattern"]

# Creation of destination file (changing of the compression settings)
dest_file = ROOT.TFile.Open(dest_name,"recreate") if opt_dict["recreate"] else ROOT.TFile.Open(dest_name,"update")
if opt_dict["compress"]: dest_file.SetCompressionSettings(opt_dict["compress"])

# Loop on the root files   
for source_name, path_list in source_list:
    source_file = ROOT.TFile.Open(source_name) if source_name != dest_name else dest_file
    for source_path in path_list:
        copier(source_file,source_path,dest_file,dest_path)
    if source_name != dest_name:
        source_file.Close()
dest_file.Close()
