#!/usr/bin/python

"""rtrthrth"""

from pattern_to_dict import *
from chg_dir import *
import argparse
import os
import ROOT

# Collect arguments with the module argparse
parser = argparse.ArgumentParser(description="list ROOT file contents")
parser.add_argument("pattern_list", \
                    help="file path and object path in the ROOT file with the syntax : [file_path/]file.root:[object_path/]object", \
                    nargs='+')
args = parser.parse_args()

# Create a dictionnary with ROOT file name as key
# and which contains list of paths
file_dict = pattern_to_dict(args.pattern_list)

# Loop on the root files
canvas = ROOT.TCanvas("canvas")
for file_name, path_list in file_dict.items():
    root_file = ROOT.TFile.Open(file_name)
    for i,path in enumerate(path_list):
        chg_dir(root_file,path[:-1])
        key = ROOT.gDirectory.GetKey(path[-1])
        obj = key.ReadObj()
        obj.Draw()
        if i == 0 and len(path_list) > 1:
            canvas.Print(path[-1]+".pdf(","/".join(path))
        elif i == len(path_list)-1 and len(path_list) > 1:
            canvas.Print(path[-1]+".pdf)","/".join(path))
        else:
            canvas.Print(path[-1]+".pdf","/".join(path))
    root_file.Close()

"""
canvas = ROOT.TCanvas("canvas")
histo = ROOT.TH1F("histo","test 1",10,0.,10.)
histo.SetFillColor(2)
histo.Fill(2.)
histo.Draw()
canvas.Print("plots.pdf(","Title:One bin filled")
histo.Fill(4.)
histo.Draw()
canvas.Print("plots.pdf","Title:Two bins filled")
histo.Fill(6.)
histo.Draw()
canvas.Print("plots.pdf","Title:Three bins filled")
histo.Fill(8.)
histo.Draw()
canvas.Print("plots.pdf","Title:Four bins filled")
histo.Fill(8.)
histo.Draw()
canvas.Print("plots.pdf)","Title:The fourth bin content is 2")
"""
