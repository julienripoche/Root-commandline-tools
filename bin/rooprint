#!/usr/bin/python

"""Commandline to print root contents on ps,pdf or png,gif.. files"""

from pattern_to_tuple import *
from utils import *
import argparse
import os
import ROOT

# Collect arguments with the module argparse
parser = argparse.ArgumentParser(description="print ROOT file contents on ps,pdf or png,gif.. files")
parser.add_argument("-o", "--output", help="place output in file file.pdf")
parser.add_argument("pattern_list", \
                    help="file path and object path in the ROOT file with the syntax : [file_path/]file.root:[object_path/]object", \
                    nargs='+')
args = parser.parse_args()

# Create a list of tuples that contain a ROOT file name and a list of path in this file
file_list = []
for pattern in args.pattern_list:
    file_list.extend(pattern_to_tuple(pattern))

# Create a dictionnary with options
opt_dict = vars(args)
del opt_dict["pattern_list"]

# Initialize the canvas
ROOT.gErrorIgnoreLevel = 9999
ROOT.gROOT.SetBatch()
canvas = ROOT.TCanvas("canvas")

# Beginning
if opt_dict["output"]:
    output_name = opt_dict["output"]
    canvas.Print(output_name+"[")

# Loop on the root files
for file_name, path_list in file_list:
    root_file = ROOT.TFile.Open(file_name)

    # Name the pdf file
    #if not opt_dict["output"]:
    #    output_name = root_file.GetName()
    #    if output_name[-5:]==".root":
    #        output_name = output_name[:-5]
    #    else:
    #        output_name

    # Fill the key list
    obj_list,dir_list = dir_selector(root_file,path_list)
    key_list = [get_key(root_file,path) for path in obj_list]
    for path in dir_list:
        key_list.extend(get_key_list(root_file,path))
    key_list = [key for key in key_list if not is_directory(key)]
    #key_list.sort() #????

    # Loop
    for i,key in enumerate(key_list):
        # Beginning
        if not opt_dict["output"]:
            output_name = key.GetName()+".pdf"
            canvas.Print(output_name+"[")

        obj = key.ReadObj()
        obj.Draw()
        obj_title = "Title:"+key.GetClassName()+" : "+key.GetTitle()
        canvas.Print(output_name,obj_title)

        # Ending
        if not opt_dict["output"]:
            canvas.Print(output_name+"]",obj_title)

    root_file.Close()

# Ending
if opt_dict["output"]:
    canvas.Print(output_name+"]",obj_title)
